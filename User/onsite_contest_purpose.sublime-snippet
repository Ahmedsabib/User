<snippet>
  <content><![CDATA[
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
 
#define int long long
#define F first
#define S second
#define ins insert
#define MP make_pair
#define PB push_back
#define vi vector<int>
#define pii pair<int, int>
#define sz(x) ((int) (x).size())
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define REP(i, a, b) for(int i = (a); i < (b); i++)
#define PER(i, a, b) for(int i = (b) - 1; i >= (a); i--)

using namespace std;
using namespace __gnu_pbds;

template <typename T>
using indexed_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

using namespace std;
 
void solve() {
  // TODO: make sure all variable get reset.
}
 
int32_t main() {
  ios::sync_with_stdio(0); cin.tie(0);
  
  int TC;
  cin >> TC;
  while (TC--) {
    solve();
  }
  return 0;
}
]]></content>
  <tabTrigger>template</tabTrigger>
  <description>onsite_contest_purpose</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>